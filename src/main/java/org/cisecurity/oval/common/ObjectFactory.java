//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.08.05 at 06:06:44 PM EDT 
//


package org.cisecurity.oval.common;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;
import org.cisecurity.xmldsig.SignatureType;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.cisecurity.oval.common package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    //private final static QName _Signature_QNAME = new QName("http://www.w3.org/2000/09/xmldsig#", "Signature");
    private final static QName _ConstantVariable_QNAME = new QName("http://oval.cisecurity.org/XMLSchema/oval-common-6", "constant_variable");
    private final static QName _Variable_QNAME = new QName("http://oval.cisecurity.org/XMLSchema/oval-common-6", "variable");
    private final static QName _DeprecatedInfo_QNAME = new QName("http://oval.cisecurity.org/XMLSchema/oval-common-6", "deprecated_info");
    private final static QName _ElementMapping_QNAME = new QName("http://oval.cisecurity.org/XMLSchema/oval-common-6", "element_mapping");
    private final static QName _Notes_QNAME = new QName("http://oval.cisecurity.org/XMLSchema/oval-common-6", "notes");
    private final static QName _LocalVariable_QNAME = new QName("http://oval.cisecurity.org/XMLSchema/oval-common-6", "local_variable");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.cisecurity.oval.common
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link LocalVariable }
     * 
     */
    public LocalVariable createLocalVariable() {
        return new LocalVariable();
    }

    /**
     * Create an instance of {@link VariableType }
     * 
     */
    public VariableType createVariableType() {
        return new VariableType();
    }

    /**
     * Create an instance of {@link NotesType }
     * 
     */
    public NotesType createNotesType() {
        return new NotesType();
    }

    /**
     * Create an instance of {@link ElementMapType }
     * 
     */
    public ElementMapType createElementMapType() {
        return new ElementMapType();
    }

    /**
     * Create an instance of {@link DeprecatedInfoType }
     * 
     */
    public DeprecatedInfoType createDeprecatedInfoType() {
        return new DeprecatedInfoType();
    }

    /**
     * Create an instance of {@link ConstantVariable }
     * 
     */
    public ConstantVariable createConstantVariable() {
        return new ConstantVariable();
    }

    /**
     * Create an instance of {@link LiteralComponentType }
     * 
     */
    public LiteralComponentType createLiteralComponentType() {
        return new LiteralComponentType();
    }

    /**
     * Create an instance of {@link SchemaVersionType }
     * 
     */
    public SchemaVersionType createSchemaVersionType() {
        return new SchemaVersionType();
    }

    /**
     * Create an instance of {@link ArithmeticFunctionType }
     * 
     */
    public ArithmeticFunctionType createArithmeticFunctionType() {
        return new ArithmeticFunctionType();
    }

    /**
     * Create an instance of {@link EscapeRegexFunctionType }
     * 
     */
    public EscapeRegexFunctionType createEscapeRegexFunctionType() {
        return new EscapeRegexFunctionType();
    }

    /**
     * Create an instance of {@link UniqueFunctionType }
     * 
     */
    public UniqueFunctionType createUniqueFunctionType() {
        return new UniqueFunctionType();
    }

    /**
     * Create an instance of {@link CountFunctionType }
     * 
     */
    public CountFunctionType createCountFunctionType() {
        return new CountFunctionType();
    }

    /**
     * Create an instance of {@link MessageType }
     * 
     */
    public MessageType createMessageType() {
        return new MessageType();
    }

    /**
     * Create an instance of {@link VariableComponentType }
     * 
     */
    public VariableComponentType createVariableComponentType() {
        return new VariableComponentType();
    }

    /**
     * Create an instance of {@link GeneratorType }
     * 
     */
    public GeneratorType createGeneratorType() {
        return new GeneratorType();
    }

    /**
     * Create an instance of {@link ElementMapItemType }
     * 
     */
    public ElementMapItemType createElementMapItemType() {
        return new ElementMapItemType();
    }

    /**
     * Create an instance of {@link RegexCaptureFunctionType }
     * 
     */
    public RegexCaptureFunctionType createRegexCaptureFunctionType() {
        return new RegexCaptureFunctionType();
    }

    /**
     * Create an instance of {@link BeginFunctionType }
     * 
     */
    public BeginFunctionType createBeginFunctionType() {
        return new BeginFunctionType();
    }

    /**
     * Create an instance of {@link ObjectComponentType }
     * 
     */
    public ObjectComponentType createObjectComponentType() {
        return new ObjectComponentType();
    }

    /**
     * Create an instance of {@link SplitFunctionType }
     * 
     */
    public SplitFunctionType createSplitFunctionType() {
        return new SplitFunctionType();
    }

    /**
     * Create an instance of {@link VariablesType }
     * 
     */
    public VariablesType createVariablesType() {
        return new VariablesType();
    }

    /**
     * Create an instance of {@link EndFunctionType }
     * 
     */
    public EndFunctionType createEndFunctionType() {
        return new EndFunctionType();
    }

    /**
     * Create an instance of {@link GlobToRegexFunctionType }
     * 
     */
    public GlobToRegexFunctionType createGlobToRegexFunctionType() {
        return new GlobToRegexFunctionType();
    }

    /**
     * Create an instance of {@link ValueType }
     * 
     */
    public ValueType createValueType() {
        return new ValueType();
    }

    /**
     * Create an instance of {@link TimeDifferenceFunctionType }
     * 
     */
    public TimeDifferenceFunctionType createTimeDifferenceFunctionType() {
        return new TimeDifferenceFunctionType();
    }

    /**
     * Create an instance of {@link SubstringFunctionType }
     * 
     */
    public SubstringFunctionType createSubstringFunctionType() {
        return new SubstringFunctionType();
    }

    /**
     * Create an instance of {@link ConcatFunctionType }
     * 
     */
    public ConcatFunctionType createConcatFunctionType() {
        return new ConcatFunctionType();
    }

//    /**
//     * Create an instance of {@link JAXBElement }{@code <}{@link SignatureType }{@code >}}
//     *
//     */
//    @XmlElementDecl(namespace = "http://www.w3.org/2000/09/xmldsig#", name = "Signature")
//    public JAXBElement<SignatureType> createSignature(SignatureType value) {
//        return new JAXBElement<SignatureType>(_Signature_QNAME, SignatureType.class, null, value);
//    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConstantVariable }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://oval.cisecurity.org/XMLSchema/oval-common-6", name = "constant_variable", substitutionHeadNamespace = "http://oval.cisecurity.org/XMLSchema/oval-common-6", substitutionHeadName = "variable")
    public JAXBElement<ConstantVariable> createConstantVariable(ConstantVariable value) {
        return new JAXBElement<ConstantVariable>(_ConstantVariable_QNAME, ConstantVariable.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link VariableType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://oval.cisecurity.org/XMLSchema/oval-common-6", name = "variable")
    public JAXBElement<VariableType> createVariable(VariableType value) {
        return new JAXBElement<VariableType>(_Variable_QNAME, VariableType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DeprecatedInfoType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://oval.cisecurity.org/XMLSchema/oval-common-6", name = "deprecated_info")
    public JAXBElement<DeprecatedInfoType> createDeprecatedInfo(DeprecatedInfoType value) {
        return new JAXBElement<DeprecatedInfoType>(_DeprecatedInfo_QNAME, DeprecatedInfoType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ElementMapType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://oval.cisecurity.org/XMLSchema/oval-common-6", name = "element_mapping")
    public JAXBElement<ElementMapType> createElementMapping(ElementMapType value) {
        return new JAXBElement<ElementMapType>(_ElementMapping_QNAME, ElementMapType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link NotesType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://oval.cisecurity.org/XMLSchema/oval-common-6", name = "notes")
    public JAXBElement<NotesType> createNotes(NotesType value) {
        return new JAXBElement<NotesType>(_Notes_QNAME, NotesType.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link LocalVariable }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://oval.cisecurity.org/XMLSchema/oval-common-6", name = "local_variable", substitutionHeadNamespace = "http://oval.cisecurity.org/XMLSchema/oval-common-6", substitutionHeadName = "variable")
    public JAXBElement<LocalVariable> createLocalVariable(LocalVariable value) {
        return new JAXBElement<LocalVariable>(_LocalVariable_QNAME, LocalVariable.class, null, value);
    }

}
